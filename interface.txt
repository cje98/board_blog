* : 필수
Bearer Token : 토큰을 소요한 사람에게 엑세스 권한 부여하는 토큰 클래스

+ 추가 기능 : 댓글 삭제, 상세 페이지 클릭 전 이미지 갯수 표시, 좋아요 취소, 파일 삭제
======================================================
signIn (로그인)

- url
POST /api/v1/auth/sign-in

- request
{
    *email : String,
    *password : String
}

- response

성공

Http Status : 200 (OK)
{
    code : "SU",
    message : "Success.",
    token : "jwt...",
    expiredDate : 123456789
}

실패

- 필수정보 미입력

- 유효성 검사 실패
Http Status - 400 (Bad Request)

{
    "code": "VF",
    "message": "Validation failed."
}

- 로그인 실패
Http Status - 401 (Unauthorized)
{
    code : "SF",
    message : "Sign In Failed."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

signUp (회원가입)

- url
POST /api/v1/auth/sign-up

- request
{
    *email : String,
    *password : String,
    *nickname : String,
    *telNumber : String,
    *address : String,
    addressDetail : String
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success."
}

실패

- 필수 정보 미입력 / 이메일 포멧 불일치 / 비밀번호 8자 미만 / 전화번호 포멧 불일치

- 유효성 검사 실패
Http Status - 400 (Bad Request)

{
    "code": "VF",
    "message": "Validation failed."
}
- 중복된 이메일
Http Status - 400 (Bad Request) 
{
    "code": "DN",
    "message": "Duplicate nickname."
}

- 중복된 닉네임
Http Status - 400 (Bad Request) 

{
    "code": "DN",
    "message": "Duplicate nickname."
}

- 중복된 휴대번호
Http Status - 400 (Bad Request) 

{
    "code": "DT",
    "message": "Duplicate telephone number."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

weeklyTop3List (주간 상위 3 게시물 리스트)

- url
GET /api/v1/board/top-3

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    top3List : BoardListItem[]
}

BoardListItem
{
    boardNumber : int,
    title : String,
    content : String, 
    boardTitleImage : String,
    favoriteCount : int,
    commentCount : int,
    viewCount : int,
    writeDatetime : String, 
    writerNickname : String,
    writerProfileImage : String
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

currentList (최신 게시물 리스트)

- url
Get /api/v1/board/current-list/{pageNumber}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    currentList : BoardListItem[]
}

BoardListItem
{
    boardNumber : int,
    title : String,
    content : String, 
    boardTitleImage : String,
    favoriteCount : int,
    commentCount : int,
    viewCount : int,
    writeDatetime : String, 
    writerNickname : String,
    writerProfileImage : String
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

popularWordList (인기 검색어 리스트)

- url
GET /api/v1/search/popular-list

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    popWordList : String[]
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}
======================================================

searchList (검색 게시물 리스트)

- url
Get /api/v1/board/search-list/{searchWord}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    searchList : BoardListItem[]
}

BoardListItem
{
    boardNumber : int,
    title : String,
    content : String, 
    boardTitleImage : String,
    favoriteCount : int,
    commentCount : int,
    viewCount : int,
    writeDatetime : String, 
    writerNickname : String,
    writerProfileImage : String
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}
======================================================

relativeWordList (관련 검색어 리스트)

- url
GET /api/v1/search/{searchWord}/relation-list

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    relativeWordList : String[]
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

boardDetail (게시물 상세)

- url
Get /api/v1/board/{boardNumber}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    boardNumber : int,
    title : String,
    content : String, 
    boardImage : String[],
    writeDatetime : String,
    writeEmail : String,
    writerNickname : String,
    writerProfileImage : String

}

실패

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB",
    message : "No Existed Board Number."
}
======================================================

favoriteList (좋아요 리스트)

- url
Get /api/v1/board/{boardNumber}/favorite-list

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    favoriteList : FavoriteListItem[]
}

FavoriteListItem{
    email : String,
    nickname : String,
    profileImage : String 
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}
======================================================

putFavorite (좋아요 기능)

- url
PUT /api/v1/board/{boardNumber}/favorite

- Header
Name               Value
Authorization      Bearer Token

- request
{
    boardNumber : int
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success."
}

실패

- 유효성 검사 실패
Http Status - 400 (Bad Request)

{
    "code": "VF",
    "message": "Validation failed."
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP",
    message : "No Permission"
}


- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

commentList (댓글 리스트)

- url
Get /api/v1/board/{boardNumber}/comment-list

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    commentList : CommentListItem[]
}

CommentListItem{
    email : String,
    nickname : String,
    writeDatetime : String,
    content : String
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

postComment (댓글 작성)

- url
POST /api/v1/board/{boardNumber}/comment

- Header
Name               Value
Authorization      Bearer Token

- request
{
    boardNumber : int,
    content : String
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
}

실패

- 유효성 검사 실패
Http Status - 400 (Bad Request)

{
    "code": "VF",
    "message": "Validation failed."
}

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB",
    message : "No Existed Board"
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU",
    message : "No Existed User"
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP",
    message : "No Permission"
}


- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

boardDelete (게시물 삭제)

- url
DELETE /api/v1/board/{boardNumber}

- Header
Name               Value
Authorization      Bearer Token

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
}

실패

- 유효성 검사 실패
Http Status - 400 (Bad Request)

{
    "code": "VF",
    "message": "Validation failed."
}

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB",
    message : "No Existed Board"
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU",
    message : "No Existed User"
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP",
    message : "No Permission"
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

boardWrite (게시물 작성)

- url
POST /api/v1/board

- Header
Name               Value
Authorization      Bearer Token


- request
{
    *title : String,
    *content : String,
    boardImageList : String[]
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
}

실패

- 유효성 검사 실패
Http Status - 400 (Bad Request)

{
    "code": "VF",
    "message": "Validation failed."
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU",
    message : "No Existed User"
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP",
    message : "No Permission"
}


- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

boardUpdate (게시물 수정)

- url
PATCH /api/v1/board/{boardNumber}

- Header
Name               Value
Authorization      Bearer Token

- request
{
    *title : String,
    *content : String,
    boardImageList : String[]
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
}

실패



- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB",
    message : "No Existed Board"
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU",
    message : "No Existed User"
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP",
    message : "No Permission"
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

getUser (유저 정보)

- url
GET /api/v1/user/{email}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    email : String,
    nickname : String,
    profileImage : String
}

실패

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU",
    message : "No Existed User"
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}
======================================================

userBoardList (특정 유저 게시물 리스트)

- url
Get /api/v1/board/user-board/{email}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    boardList : BoardListItem[]
}

BoardListItem
{
    boardNumber : int,
    title : String,
    content : String, 
    boardTitleImage : String,
    favoriteCount : int,
    commentCount : int,
    viewCount : int,
    writeDatetime : String, 
    writerNickname : String,
    writerProfileImage : String
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================

patchNickname (닉네임 수정)

- url
PATCH /api/v1/user/nickname

- Header
Name               Value
Authorization      Bearer Token

- request
{
    *nickname : String
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success."
}

실패

- 유효성 검사 실패
Http Status - 400 (Bad Request)

{
    "code": "VF",
    "message": "Validation failed."
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU",
    message : "No Existed User"
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP",
    message : "No Permission"
}


- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================


patchProfileImage (프로필 이미지 수정)

- url
PATCH /api/v1/user/profile-image

- Header
Name               Value
Authorization      Bearer Token

- request
{
    *profileImage : String
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success."
}

실패

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU",
    message : "No Existed User"
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP",
    message : "No Permission"
}


- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}
======================================================

fileUpload (파일 업로드)

======================================================

getFile (파일 불러오기)

======================================================

로그인 유저 정보

- url
GET /api/v1/User

- Header
Name               Value
Authorization      Bearer Token

- response

성공

Http Status - 200 (OK)
{
    *code : "SU",
    *message : "Success.",
    *email : String,
    *nickname : String,
    profileImage : String
}

실패

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU",
    message : "This user does not exist."
}

- 인증 실패
Http Status - 401 (Unauthorized) 
{
    code: "AF",
    message: "Authorization Failed."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE",
    message : "Database Error."
}

======================================================


